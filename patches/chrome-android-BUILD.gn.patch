diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
index 4c9affbf42d33c6c3593be43c103844ea22584b0..b5c9e002942c3866d7ff73b26cf547774b339c1c 100644
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -267,6 +267,7 @@ android_resources("chrome_app_java_resources") {
     "//third_party/androidx:androidx_preference_preference_java",
     "//third_party/androidx:androidx_recyclerview_recyclerview_java",
   ]
+  deps += brave_chrome_app_java_resources_deps sources += brave_java_resources resource_overlay = true
 }
 
 if (enable_vr) {
@@ -647,6 +648,7 @@ android_library("chrome_java") {
   ]
 
   deps += feed_deps
+  deps += brave_chrome_java_deps
 
   srcjar_deps = [
     ":autofill_verification_status_generated_enum",
@@ -678,6 +680,7 @@ android_library("chrome_java") {
     "//components/offline_pages/core:offline_page_model_enums_java",
     "//net:effective_connection_type_java",
   ]
+  srcjar_deps += brave_chrome_java_srcjar_deps
 
   # From java_sources.gni.
   sources = chrome_java_sources + [ app_hooks_impl ]
@@ -800,6 +803,7 @@ java_group("chrome_all_java") {
       "//chrome/android/features/tab_ui:module_desc_java",
     ]
   }
+  deps += brave_chrome_all_java_deps
 }
 
 # This is a list of all base module jni headers. New features should add their
@@ -846,6 +850,7 @@ group("jni_headers") {
     "//components/ukm/android:jni_headers",
     "//components/webauthn/android:jni_headers",
   ]
+  public_deps += ["//brave/build/android:jni_headers"]
 }
 
 action_with_pydeps("chrome_android_java_google_api_keys_srcjar") {
@@ -2234,6 +2239,7 @@ if (current_toolchain == default_toolchain) {
         ":${_variant}_locale_pak_assets",
         ":${_variant}_paks",
       ]
+      deps += [ "//brave:brave_pak_assets" ]
       if (_is_monochrome) {
         deps += [ "//android_webview:locale_pak_assets" ]
         if (webview_includes_weblayer && !_is_bundle_module) {
@@ -2439,6 +2445,7 @@ static_library("browser_test_support") {
     "//url:gurl_android_test_helper",
   ]
 }
+_lib_dir = get_label_info("//brave/third_party/android_deps:com_wireguard_android($default_toolchain)","target_out_dir") + "/com_wireguard_android_java/jni"
 
 # Defines a target that derives from the chrome public application. This
 # can be either an APK or an app bundle module. This supports
@@ -2491,6 +2498,7 @@ template("chrome_public_apk_or_module_tmpl") {
     load_library_from_apk = chromium_linker_supported
 
     version_name = chrome_version_name
+    deps += ["//brave/third_party/android_deps:com_wireguard_android_J__unpack_aar"]loadable_modules = [ "$_lib_dir/$android_app_abi/libwg-go.so"]
   }
 }
 
@@ -2632,6 +2640,7 @@ android_library("base_module_java") {
     "//components/payments/content/android:service_java",
     "//third_party/androidx:androidx_browser_browser_java",
   ]
+  sources += brave_java_base_module_sources deps += brave_java_base_module_deps
 
   # More deps for DFMs.
   if (dfmify_dev_ui) {
@@ -2782,6 +2791,7 @@ template("monochrome_public_apk_or_module_tmpl") {
         deps += [ "//weblayer/browser/java:upstream_java" ]
       }
     }
+    deps += ["//brave/third_party/android_deps:com_wireguard_android_J__unpack_aar"]if (!_is_bundle) {loadable_modules = [ "$_lib_dir/armeabi-v7a/libwg-go.so"]secondary_abi_loadable_modules = [ "$_lib_dir/arm64-v8a/libwg-go.so"]} else {loadable_modules = [ "$_lib_dir/arm64-v8a/libwg-go.so"]secondary_abi_loadable_modules = [ "$_lib_dir/armeabi-v7a/libwg-go.so"]}
   }
 }
 
